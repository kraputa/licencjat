<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Page
 *
 * @ORM\Table(name="puzzles")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\PuzzleRepository")
 *
 */
class Puzzle
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;


    /**
     * @var string
     * @Assert\NotBlank()
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title;

    /**
     * @var string
     * @Assert\NotBlank()
     * @ORM\Column(name="body", type="text")
     */
    private $body;

    /**
     * @var string
     *
     * @ORM\Column(name="unlockQuestion", type="text",)
     * @Assert\Expression(
     *     "not (this.getUnlockQuestion() != null and this.getUnlockAnswer() == null)",
     *     message="You have to add answer to question"
     * )
     *
     * @Assert\Expression(
     *     "not (this.getUnlockAnswer() != null and this.getUnlockQuestion() == null)",
     *     message="You have to add question"
     * )
     *
     */
    private $unlockQuestion;

    /**
     * @var string
     *
     * @ORM\Column(name="unlockAnswer", type="string", length=255)
     * @Assert\Expression(
     *     "not (this.getUnlockQuestion() != null and this.getUnlockAnswer() == null)",
     *     message="You have to add answer to question"
     * )
     *
     * @Assert\Expression(
     *     "not (this.getUnlockAnswer() != null and this.getUnlockQuestion() == null)",
     *     message="You have to add question"
     * )
     *
     */
    private $unlockAnswer;

    /**
     *
     * @ORM\ManyToOne(targetEntity="Picture")
     * @ORM\JoinColumn(name="questionPicture_id", referencedColumnName="id")
     *
     */
    private $questionPicture;


    /**
     * @ORM\ManyToMany(targetEntity="User", mappedBy="unlockedPuzzles")
     */
    private $users;


    /**
     * @ORM\ManyToMany(targetEntity="Page", inversedBy="puzzles")
     * @ORM\JoinTable(name="pages_puzzles")
     */
    private $pages;


    /**
     * Page constructor.
     */
    public function __construct() {
        $this->users = new \Doctrine\Common\Collections\ArrayCollection();
        $this->pages = new \Doctrine\Common\Collections\ArrayCollection();
    }
}
